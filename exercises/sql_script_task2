DROP TABLE IF EXISTS sales;

CREATE TABLE sales (
    sale_id INT AUTO_INCREMENT PRIMARY KEY,
    sale_date DATE NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    total_price DECIMAL(10,2) GENERATED ALWAYS AS (quantity * unit_price) STORED,
    customer_id INT
);
INSERT INTO sales (sale_date, product_id, quantity, unit_price, customer_id) VALUES

('2025-10-01', 101, 2, 500.00, 1),
('2025-10-01', 102, 1, 1500.00, 2),
('2025-10-01', 103, 3, 200.00, 3),
('2025-10-01', 104, 1, 800.00, 4),
('2025-10-02', 101, 1, 500.00, 2),
('2025-10-02', 102, 2, 1500.00, 5),
('2025-10-02', 103, 4, 200.00, 6),
('2025-10-02', 105, 2, 1200.00, 7),
('2025-10-03', 101, 3, 500.00, 1),
('2025-10-03', 104, 2, 800.00, 3),
('2025-10-03', 105, 1, 1200.00, 4),
('2025-10-03', 102, 1, 1500.00, 2),
('2025-10-04', 103, 5, 200.00, 5),
('2025-10-04', 104, 3, 800.00, 6),
('2025-10-04', 105, 2, 1200.00, 7),
('2025-10-04', 101, 1, 500.00, 8),
('2025-10-05', 102, 2, 1500.00, 3),
('2025-10-05', 103, 1, 200.00, 1),
('2025-10-05', 104, 4, 800.00, 5),
('2025-10-05', 105, 2, 1200.00, 6),
('2025-10-06', 101, 3, 500.00, 2),
('2025-10-06', 102, 1, 1500.00, 4),
('2025-10-06', 103, 2, 200.00, 5),
('2025-10-06', 104, 1, 800.00, 6),
('2025-10-06', 105, 3, 1200.00, 7),
('2025-10-07', 101, 2, 500.00, 1),
('2025-10-07', 102, 1, 1500.00, 2),
('2025-10-07', 103, 4, 200.00, 3),
('2025-10-07', 104, 2, 800.00, 4),
('2025-10-07', 105, 1, 1200.00, 5),
('2025-10-08', 101, 1, 500.00, 6),
('2025-10-08', 102, 3, 1500.00, 7),
('2025-10-08', 103, 2, 200.00, 1),
('2025-10-08', 104, 4, 800.00, 2),
('2025-10-08', 105, 2, 1200.00, 3),
('2025-10-09', 101, 3, 500.00, 4),
('2025-10-09', 102, 2, 1500.00, 5),
('2025-10-09', 103, 1, 200.00, 6),
('2025-10-09', 104, 2, 800.00, 7),
('2025-10-09', 105, 3, 1200.00, 8),
('2025-10-10', 101, 2, 500.00, 1),
('2025-10-10', 102, 1, 1500.00, 2),
('2025-10-10', 103, 3, 200.00, 3),
('2025-10-10', 104, 1, 800.00, 4),
('2025-10-10', 105, 2, 1200.00, 5),
('2025-10-11', 101, 1, 500.00, 6),
('2025-10-11', 102, 2, 1500.00, 7),
('2025-10-11', 103, 2, 200.00, 1),
('2025-10-11', 104, 3, 800.00, 2),
('2025-10-11', 105, 1, 1200.00, 3),
('2025-10-12', 101, 3, 500.00, 4),
('2025-10-12', 102, 1, 1500.00, 5),
('2025-10-12', 103, 4, 200.00, 6),
('2025-10-12', 104, 2, 800.00, 7),
('2025-10-12', 105, 2, 1200.00, 8);
-- 3.1 Daily Total Sales
SELECT 
    sale_date,
    SUM(total_price) AS daily_total_sales,
    COUNT(sale_id) AS total_transactions
FROM sales
GROUP BY sale_date
ORDER BY sale_date;

-- 3.2 Average Transaction Value
SELECT 
    sale_date,
    AVG(total_price) AS avg_transaction_value
FROM sales
GROUP BY sale_date
ORDER BY sale_date;

-- 3.3 Top-Selling Products by Revenue
SELECT 
    product_id,
    SUM(quantity) AS total_units_sold,
    SUM(total_price) AS total_revenue
FROM sales
GROUP BY product_id
ORDER BY total_revenue DESC
LIMIT 10;

-- 3.4 Monthly Sales Trend
SELECT 
    DATE_FORMAT(sale_date, '%Y-%m') AS month,
    SUM(total_price) AS monthly_sales,
    COUNT(sale_id) AS total_transactions
FROM sales
GROUP BY DATE_FORMAT(sale_date, '%Y-%m')
ORDER BY month;

-- 3.5 Combined Daily Sales Report
SELECT 
    sale_date,
    SUM(total_price) AS daily_total_sales,
    COUNT(sale_id) AS total_transactions,
    AVG(total_price) AS avg_transaction_value
FROM sales
GROUP BY sale_date
ORDER BY sale_date;

-- 3.6 Top Customers by Total Spending
SELECT 
    customer_id,
    COUNT(sale_id) AS total_transactions,
    SUM(total_price) AS total_spent,
    AVG(total_price) AS avg_transaction_value
FROM sales
GROUP BY customer_id
ORDER BY total_spent DESC
LIMIT 10;
